@model CreateSolicitudViewModel
@using System.Security.Claims
@{
    ViewData["Title"] = "Nueva Solicitud";
}

<form asp-action="Create" method="post" id="formSolicitud">
    @Html.AntiForgeryToken()
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <div class="row g-3">
        <!-- Contrato -->
        <div class="col-md-6">
            <label class="form-label">Negociación</label>
            <div class="input-group">
                <select asp-for="ContratoId"
                        class="form-select form-select-sm"
                        asp-items="ViewBag.ContratoId"
                        id="ContratoId">
                </select>
                <button type="button"
                        class="btn btn-outline-primary btn-sm"
                        id="abrirModalContrato">
                    <i class="bi bi-plus-circle"></i> Nuevo
                </button>
            </div>
        </div>

        <!-- Numero Solicitud --></>
        <div class="col-md-6">
            <label asp-for="NumeroSolicitud" class="form-label">Numero Solicitud</label>
            <input asp-for="NumeroSolicitud" class="form-control" id="NumeroSolicitud" />
            <span asp-validation-for="NumeroSolicitud" class="text-danger"></span>
        </div>

        <!-- Vendedor -->
        <div class="col-md-6">
            <label asp-for="VendedorUserId" class="form-label">Vendedor</label>
            @{
                var vendedorBloqueado = (bool)(ViewBag.VendedorBloqueado ?? false);
            }
            @if (vendedorBloqueado)
            {
                <select asp-for="VendedorUserId" class="form-select" asp-items="ViewBag.VendedorUserId" disabled></select>
                <input type="hidden" asp-for="VendedorUserId" />
            }
            else
            {
                <select asp-for="VendedorUserId" class="form-select" asp-items="ViewBag.VendedorUserId"></select>
            }
            <span asp-validation-for="VendedorUserId" class="text-danger"></span>
        </div>

        <!-- Supervisor -->
        <div class="col-md-6">
            <label asp-for="SupervisorUserId" class="form-label">Supervisor</label>
            <select asp-for="SupervisorUserId" class="form-select" asp-items="ViewBag.SupervisorUserId"></select>
            <span asp-validation-for="SupervisorUserId" class="text-danger"></span>
        </div>

        <!-- Jefe de Ventas -->
        <div class="col-md-6">
            <label asp-for="JefeVentasUserId" class="form-label">Jefe de Ventas</label>
            <select asp-for="JefeVentasUserId" class="form-select" asp-items="ViewBag.JefeVentasUserId"></select>
            <span asp-validation-for="JefeVentasUserId" class="text-danger"></span>
        </div>

        <!-- Usuario (quien carga) -->
        <input type="hidden" asp-for="UsuarioId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />

        <div class="col-12 border rounded p-3 bg-light">
            <label style="font-weight: bold">DATOS CLIENTE</label>
        </div>

        <!-- Cliente nuevo -->
        <div class="col-12 border rounded p-3 bg-light" id="secCliNuevo">
            <div class="row g-3">
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.Dni" class="form-label">DNI</label>
                    <input asp-for="ClienteNuevo.Dni" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.ApellidoYNombre" class="form-label">Apllido y Nombre</label>
                    <input asp-for="ClienteNuevo.ApellidoYNombre" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.TelefonoFijo" class="form-label"></label>
                    <input asp-for="ClienteNuevo.TelefonoFijo" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.TelefonoCelular" class="form-label"></label>
                    <input asp-for="ClienteNuevo.TelefonoCelular" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.Mail" class="form-label"></label>
                    <input asp-for="ClienteNuevo.Mail" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.FechaNacimiento" class="form-label"></label>
                    <input asp-for="ClienteNuevo.FechaNacimiento" type="date" class="form-control" />
                </div>
                <div class="col-md-12">
                    <label asp-for="ClienteNuevo.Direccion" class="form-label"></label>
                    <input asp-for="ClienteNuevo.Direccion" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.Nacionalidad" class="form-label"></label>
                    <input asp-for="ClienteNuevo.Nacionalidad" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.LocalidadId" class="form-label"></label>
                    <select asp-for="ClienteNuevo.LocalidadId" class="form-select" asp-items="ViewBag.LocalidadId"></select>
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.Barrio" class="form-label"></label>
                    <input asp-for="ClienteNuevo.Barrio" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.TipoVivienda" class="form-label"></label>
                    <input asp-for="ClienteNuevo.TipoVivienda" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.Sexo" class="form-label"></label>
                    <input asp-for="ClienteNuevo.Sexo" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.EstadoCivil" class="form-label"></label>
                    <input asp-for="ClienteNuevo.EstadoCivil" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.Ocupacion" class="form-label"></label>
                    <input asp-for="ClienteNuevo.Ocupacion" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.Empresa" class="form-label"></label>
                    <input asp-for="ClienteNuevo.Empresa" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.DomicilioLaboral" class="form-label"></label>
                    <input asp-for="ClienteNuevo.DomicilioLaboral" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.Cargo" class="form-label"></label>
                    <input asp-for="ClienteNuevo.Cargo" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.IngresosMensuales" class="form-label"></label>
                    <input asp-for="ClienteNuevo.IngresosMensuales" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.TipoOcupacion" class="form-label"></label>
                    <input asp-for="ClienteNuevo.TipoOcupacion" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label asp-for="ClienteNuevo.RazonSocial" class="form-label"></label>
                    <input asp-for="ClienteNuevo.RazonSocial" class="form-control" />
                </div>
                <div class="col-md-6 mt-4">
                    <div class="form-check">
                        <input type="checkbox"
                               name="ClienteNuevo.TieneTarjetaCredito"
                               value="true"
                        @(Model.ClienteNuevo.TieneTarjetaCredito == true ? "checked" : "") />
                        <label class="form-check-label">Tiene tarjeta de crédito</label>
                    </div>


                </div>
            </div>
        </div>

        <div class="col-12 border rounded p-3 bg-light">
            <label style="font-weight: bold">DATOS PLAN</label>
        </div>


        <!-- Búsqueda por código -->
        <div class="col-md-6">
            <label for="codigoAuto" class="form-label">Buscar por código</label>
            <input type="text" id="codigoAuto" class="form-control" placeholder="Ej: C60" />
        </div>

        <!-- Plan -->
        <div class="col-md-6">
            <label asp-for="PlanId" class="form-label">Plan</label>
            <select asp-for="PlanId" class="form-select" asp-items="ViewBag.PlanId" id="PlanId"></select>
            <span asp-validation-for="PlanId" class="text-danger"></span>
        </div>

        <!-- Condición / Tipo Baja / Estado / Fechas / Sellados -->
        <div class="col-md-6">
            <label class="form-label">Condición de venta</label>
            <select asp-for="CondicionVentaId" class="form-select" asp-items="ViewBag.CondicionVentaId"></select>
        </div>
        <div class="col-md-6">
            <label class="form-label">Tipo de baja</label>
            <select asp-for="TipoBajaId" class="form-select" asp-items="ViewBag.TipoBajaId"></select>
        </div>
        <div class="col-md-6">
            <label class="form-label">Estado</label>
            <select class="form-select" disabled>
                <option value="1" selected>Nuevo</option>
            </select>
            <input type="hidden" asp-for="EstadoId" value="1" />
        </div>
        <div class="col-md-6">
            <label asp-for="FechaCarga" class="form-label">Fecha de carga</label>
            <input asp-for="FechaCarga" type="date" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" readonly />
        </div>
        <div class="col-md-6">
            <label asp-for="FechaSuscripcion" class="form-label">Fecha suscripción</label>
            <input asp-for="FechaSuscripcion" type="date" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-6">
            <label asp-for="ValorSellado1" class="form-label">Valor Sellado</label>
            <input asp-for="ValorSellado1" class="form-control" id="ValorSellado1" />
        </div>
        <div class="col-md-6">
            <label asp-for="ValorSellado2" class="form-label">Valor Sellado 2</label>
            <input asp-for="ValorSellado2" class="form-control" id="ValorSellado2" />
        </div>

        <!-- Parámetros de cuotas -->
        <div class="col-md-4">
            <label asp-for="CantidadCuotas" class="form-label">Cantidad cuotas</label>
            <input asp-for="CantidadCuotas" class="form-control" />
        </div>
        <div class="col-md-4">
            <label asp-for="FechaPrimerVencimiento" class="form-label">1er vencimiento</label>
            <input asp-for="FechaPrimerVencimiento" type="date" class="form-control" />
        </div>
        <div class="col-md-4">
            <label asp-for="ImporteCuota" class="form-label">Importe cuota</label>
            <input asp-for="ImporteCuota" class="form-control" />
        </div>
        <div class="col-md-12">
            <label asp-for="ObservacionSolicitud" class="form-label">Observacion</label>
            <input asp-for="ObservacionSolicitud" class="form-control" />
        </div>
    </div>

    <div class="mt-4 d-flex justify-content-end">
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-save"></i> Guardar Solicitud
        </button>
    </div>
</form>

<!-- Modal: Crear Contrato -->
<div class="modal fade" id="modalContrato" tabindex="-1" aria-labelledby="modalContratoLabel" aria-hidden="true">
    <div class="modal-dialog modal-md modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modalContratoLabel" class="modal-title">Nuevo Contrato</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>

            <div class="modal-body">
                <form id="formContrato">
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        <label for="NombreContrato" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="NombreContrato" maxlength="100" required />
                        <div class="form-text">Ej: “Plan 60 cuotas”.</div>
                    </div>

                    <div class="mb-3">
                        <label for="DescripcionContrato" class="form-label">Descripción</label>
                        <textarea class="form-control" id="DescripcionContrato" rows="3"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="PlazoMeses" class="form-label">Plazo (meses)</label>
                        <input type="number" class="form-control" id="PlazoMeses" min="1" max="240" />
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnGuardarContrato">
                    <i class="bi bi-save"></i> Guardar
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal: Cliente ya existente con solicitudes -->
<div class="modal fade" id="modalClienteExiste" tabindex="-1" aria-labelledby="modalClienteExisteLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-warning-subtle">
                <h5 id="modalClienteExisteLabel" class="modal-title">
                    ⚠️ Cliente existente
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>

            <div class="modal-body">
                <p class="mb-2">
                    El DNI <strong id="dniModalTxt"></strong> corresponde a
                    <strong id="nombreClienteTxt"></strong>.
                </p>
                <p class="mb-3">
                    Este cliente ya tiene <strong id="cantSolicitudesTxt">0</strong> solicitud(es) registrada(s):
                </p>

                <div class="table-responsive">
                    <table class="table table-sm table-striped align-middle" id="tablaSolicitudesCliente">
                        <thead>
                            <tr>
                                <th style="width: 120px;">N° Solicitud</th>
                                <th>Estado</th>
                                <th style="width: 160px;">Fecha</th>
                                <th style="width: 120px;">Acciones</th>
                            </tr>
                        </thead>
                        <tbody><!-- se llena por JS --></tbody>
                    </table>
                </div>

                <div class="alert alert-info mt-3" id="sinSolicitudesMsg" style="display:none;">
                    No se encontraron solicitudes previas para este cliente.
                </div>
            </div>

            <div class="modal-footer">
                <a id="btnVerListaCliente" class="btn btn-outline-secondary" href="#" target="_blank">
                    <i class="bi bi-list-ul"></i> Ver todas las solicitudes del cliente
                </a>
                <button type="button"
                        class="btn btn-primary"
                        data-bs-dismiss="modal">
                    Continuar de todos modos
                </button>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        // ====== MODAL CLIENTE EXISTE: instancia única ======
        const modalClienteEl = document.getElementById('modalClienteExiste');
        const modalCliente = new bootstrap.Modal(modalClienteEl, {
            backdrop: true,
            keyboard: true,
            focus: true
        });

        // Flags para evitar loop
        let lastQueriedDni = "";        // último DNI consultado al server
        let lastModalDni = "";          // último DNI para el que se mostró modal
        let suppressUntilChange = false; // no consultar hasta que cambie el valor

        // Al cerrar modal: NO devolver foco automáticamente (evita blur/input)
        modalClienteEl.addEventListener('hidden.bs.modal', () => {
            // Si preferís devolver foco, mantené esta línea pero queda cubierto por la bandera:
            // document.getElementById('ClienteNuevo_Dni')?.focus();
        });

        // Botón "Continuar de todos modos": cerrar modal
        document
            .querySelector('#modalClienteExiste .btn.btn-primary[data-bs-dismiss="modal"]')
            ?.addEventListener('click', () => modalCliente.hide());

        // ====== Hook DNI: busca cliente y muestra modal si corresponde ======
        (function () {
            const dniInput = document.getElementById('ClienteNuevo_Dni');
            if (!dniInput) return;

            let debounceTimer = null;

            function normalizarDni(v) {
                return (v || "").trim().replaceAll(".", "").replaceAll("-", "");
            }

            function buscarClientePorDni(dniRaw) {
                const dni = normalizarDni(dniRaw);
                if (!dni) return;

                // Si estamos suprimidos hasta que cambie, o ya consultamos lo mismo, salir
                if (suppressUntilChange) return;
                if (dni === lastQueriedDni) return;

                lastQueriedDni = dni;

                fetch('@Url.Action("CheckClientePorDni", "Solicitudes")' + '?dni=' + encodeURIComponent(dni), { method: 'GET' })
                    .then(r => r.ok ? r.json() : Promise.reject(r))
                    .then(data => {
                        if (!data || !data.exists) return;

                        // Si ya mostramos modal para este mismo DNI, no re-abrir
                        if (dni === lastModalDni) return;

                        // Rellenar modal
                        document.getElementById('dniModalTxt').textContent = dni;
                        document.getElementById('nombreClienteTxt').textContent = data.nombre ?? '(sin nombre)';
                        document.getElementById('cantSolicitudesTxt').textContent = data.solicitudesCount ?? 0;

                        const tbody = document.querySelector('#tablaSolicitudesCliente tbody');
                        tbody.innerHTML = '';

                        const arr = Array.isArray(data.solicitudes) ? data.solicitudes : [];
                        if (arr.length === 0) {
                            document.getElementById('sinSolicitudesMsg').style.display = '';
                        } else {
                            document.getElementById('sinSolicitudesMsg').style.display = 'none';
                            for (const s of arr) {
                                const tr = document.createElement('tr');

                                const tdNum = document.createElement('td');
                                tdNum.textContent = s.numeroSolicitud ?? s.SolicitudId ?? '—';
                                tr.appendChild(tdNum);

                                const tdEstado = document.createElement('td');
                                tdEstado.textContent = s.estado ?? '—';
                                tr.appendChild(tdEstado);

                                const tdFecha = document.createElement('td');
                                const fecha = s.fecha ? new Date(s.fecha) : null;
                                tdFecha.textContent = fecha ? fecha.toLocaleDateString() : '—';
                                tr.appendChild(tdFecha);

                                const tdAcc = document.createElement('td');
                                const a = document.createElement('a');
                                a.className = 'btn btn-sm btn-outline-primary';
                                a.innerHTML = '<i class="bi bi-eye"></i> Ver';
                                a.href = '/Solicitudes/Details/' + (s.solicitudId ?? s.SolicitudId);
                                a.target = '_blank';
                                tdAcc.appendChild(a);
                                tr.appendChild(tdAcc);

                                tbody.appendChild(tr);
                            }
                        }

                        // Botón "Ver todas"
                        const btnLista = document.getElementById('btnVerListaCliente');
                        if (btnLista) btnLista.href = '/Solicitudes?clienteId=' + encodeURIComponent(data.clienteId);

                        // Mostrar modal y activar supresión hasta que el DNI cambie
                        lastModalDni = dni;
                        suppressUntilChange = true;
                        modalCliente.show();
                    })
                    .catch(err => console.error('Error CheckClientePorDni:', err));
            }

            // Solo por INPUT con debounce (quitamos BLUR para evitar loop)
            dniInput.addEventListener('input', () => {
                clearTimeout(debounceTimer);

                // Si el valor cambió respecto al último que disparó modal, re-habilitar consulta
                const valNorm = (dniInput.value || "").trim().replaceAll(".", "").replaceAll("-", "");
                if (valNorm !== lastModalDni) {
                    suppressUntilChange = false;
                }

                debounceTimer = setTimeout(() => buscarClientePorDni(dniInput.value), 600);
            });
        })();
    </script>

    <script>
        // Buscar auto por prefijo de código
        document.getElementById('codigoAuto').addEventListener('input', function () {
            const codigo = this.value.toLowerCase();
            const sel = document.getElementById('PlanId');
            for (const opt of sel.options) {
                if (opt.text.toLowerCase().startsWith(codigo)) {
                    sel.value = opt.value;
                    sel.dispatchEvent(new Event('change'));
                    break;
                }
            }
        });

        // Abrir modal de Contrato
        document.getElementById('abrirModalContrato')
            .addEventListener('click', () => {
                const modal = new bootstrap.Modal(document.getElementById('modalContrato'));
                modal.show();
            });

        // Guardar contrato por AJAX
        document.getElementById('btnGuardarContrato')
            .addEventListener('click', function () {
                const nombre = document.getElementById('NombreContrato').value.trim();
                const desc = document.getElementById('DescripcionContrato').value.trim();
                const plazo = document.getElementById('PlazoMeses').value;

                if (!nombre) {
                    alert('El nombre del contrato es obligatorio.');
                    document.getElementById('NombreContrato').focus();
                    return;
                }

                const token = document.querySelector('#formContrato input[name="__RequestVerificationToken"]')?.value || '';

                fetch('@Url.Action("CrearDesdeSolicitud", "Contratos")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                        'RequestVerificationToken': token
                    },
                    body: new URLSearchParams({
                        NombreContrato: nombre,
                        DescripcionContrato: desc,
                        PlazoMeses: plazo
                    })
                })
                    .then(r => r.ok ? r.json() : Promise.reject(r))
                    .then(resp => {
                        if (!resp?.success) {
                            alert('No se pudo guardar el contrato: ' + (resp?.message ?? 'Error desconocido'));
                            return;
                        }

                        // Agregar al combo y seleccionar
                        const sel = document.getElementById('ContratoId');
                        const opt = new Option(resp.nombre ?? ('Contrato #' + resp.id), resp.id, true, true);
                        sel.add(opt, undefined);

                        // Cerrar modal y limpiar
                        bootstrap.Modal.getInstance(document.getElementById('modalContrato')).hide();
                        document.getElementById('formContrato').reset();
                    })
                    .catch(err => {
                        alert('Error al guardar el contrato.');
                        console.error(err);
                    });
            });

        // --- Precarga de sellados por Plan
        (function () {
            const urlBase = '/Planes/sellados/';

            $(document).on('change', '#PlanId', function () {
                const id = $(this).val();
                if (!id) { limpiarSellados(); return; }
                cargarSellados(id);
            });

            $(function () {
                const id = $('#PlanId').val();
                if (id) cargarSellados(id);
            });

            $(document).on('shown.bs.modal', '#modalCrearSolicitud', function () {
                const id = $('#PlanId').val();
                if (id) cargarSellados(id);
            });

            function cargarSellados(PlanId) {
                $.getJSON(urlBase + PlanId)
                    .done(function (data) {
                        setSellados(data?.sellado1, data?.sellado2);
                    })
                    .fail(function (xhr) {
                        console.error('Error al obtener sellados', xhr.status, xhr.responseText);
                        limpiarSellados();
                    });
            }

            function setSellados(s1, s2) {
                $('#ValorSellado1').val(s1 ?? 0);
                $('#ValorSellado2').val(s2 ?? 0);
            }

            function limpiarSellados() {
                $('#ValorSellado1').val('');
                $('#ValorSellado2').val('');
            }
        })();
    </script>
}
