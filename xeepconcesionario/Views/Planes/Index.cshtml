@model IEnumerable<Plan>

@{
    ViewData["Title"] = "Planes";
}

<div class="container-fluid">

    <div class="d-flex flex-column" style="height: 80vh;">
        <!-- Alto total del bloque -->
        <!-- Encabezado y filtros -->
        <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-2">
            <h2 class="text-primary m-0">PLANES</h2>

            <div class="d-flex align-items-center gap-2 ms-auto">
                <input type="text" class="form-control form-control-sm" id="filtroModelo" placeholder="Buscar por modelo" />
                <input type="text" class="form-control form-control-sm" id="filtroCodigo" placeholder="Buscar por código" />
            </div>

            <div class="d-flex gap-2">
                <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#modalCrearPlan">
                    <i class="bi bi-car-front-fill"></i> Nuevo Plan
                </button>

            </div>
        </div>

        <!-- Tabla con altura flexible y scroll -->
        <div id="tablaPlanes" class="table-responsive flex-grow-1 overflow-auto border rounded" style="min-height: 0;">
            @await Html.PartialAsync("_TablaPlanes", Model)
        </div>

        <!-- Botones de acción -->
        <div class="mt-3 d-flex justify-content-end gap-2">
            <button id="btnEditar" class="btn btn-warning" disabled>Editar</button>
            <button id="btnEliminar" class="btn btn-danger" disabled>Eliminar</button>
        </div>

    </div>


</div>

<div class="modal fade" id="modalCrearPlan" tabindex="-1" aria-labelledby="modalCrearPlanLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalCrearPlanLabel">Nuevo Plan</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                @await Html.PartialAsync("_FormPlan", new Plan())
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}



<!-- Scripts -->
<script>
    let idSeleccionado = null;

    function inicializarSeleccionFila() {
        document.querySelectorAll(".fila-Plan").forEach(fila => {
            fila.addEventListener("click", () => {
                document.querySelectorAll(".fila-Plan").forEach(f => f.classList.remove("table-primary"));
                fila.classList.add("table-primary");
                idSeleccionado = fila.dataset.id;

                document.getElementById("btnEditar").disabled = false;
                document.getElementById("btnDetalles").disabled = false;
                document.getElementById("btnEliminar").disabled = false;
            });
        });
    }

    inicializarSeleccionFila();

    document.getElementById("btnEditar").addEventListener("click", () => {
        if (idSeleccionado) window.location.href = `/Planes/Edit/${idSeleccionado}`;
    });

    document.getElementById("btnDetalles").addEventListener("click", () => {
        if (idSeleccionado) window.location.href = `/Planes/Details/${idSeleccionado}`;
    });

    document.getElementById("btnEliminar").addEventListener("click", () => {
        if (idSeleccionado) window.location.href = `/Planes/Delete/${idSeleccionado}`;
    });

    const debounce = (callback, delay = 300) => {
        let timer;
        return (...args) => {
            clearTimeout(timer);
            timer = setTimeout(() => callback(...args), delay);
        };
    };

    const buscarPlanes = debounce(() => {
        const modelo = document.getElementById('filtroModelo').value;
        const codigo = document.getElementById('filtroCodigo').value;

        fetch(`/Planes/FiltrarPlanes?modelo=${encodeURIComponent(modelo)}&codigo=${encodeURIComponent(codigo)}`)
            .then(res => res.text())
            .then(html => {
                document.getElementById('tablaPlanes').innerHTML = html;
                inicializarSeleccionFila();
            });
    }, 300);

    document.getElementById('filtroModelo').addEventListener('input', buscarPlanes);
    document.getElementById('filtroCodigo').addEventListener('input', buscarPlanes);
</script>
